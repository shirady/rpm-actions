name: RPM Build Base Call Workflow
on: 
  workflow_call:
    inputs:
      branch:
        type: string
        description: 'Branch to Build RPM From'
        required: true
      tag:
        type: string
        description: 'Additional tag for the build (such as alpha, beta, etc.) - Optional'
        default: ''
      centos_ver:
        type: string
        description: 'Centos Base image (options: 8/9) - Optional, default is 9'
        default: '9'
      architecture:
        type: string
        description: 'Architecture (options: linux/amd64 or linux/ppc64le) - Optional, default is linux/amd64'
        default: 'linux/amd64'
    outputs: 
      rpm_full_path:
        description: 'rpm full path'
        value: ${{ jobs.rpm-build-and-upload-artifact.outputs.rpm_full_path }}
  
jobs:
  rpm-build-and-upload-artifact:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    outputs:
      rpm_full_path: ${{ steps.finalize_full_rpm_path.outputs.rpm_full_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: shirady/noobaa-core
          ref: ${{ inputs.branch }}
     
      - name: Prepare Suffix
        id: suffix
        if: ${{ inputs.tag != '' }}
        run: echo suffix="-${{ inputs.tag }}" >> $GITHUB_OUTPUT
      
      - name: Prepare CENTOS base image version
        id: centos_ver
        run: echo "centos_ver=${{ inputs.centos_ver }}" >> $GITHUB_OUTPUT

      - name: Prepare linux architecture
        id: architecture
        run: |
          if [ "${{ inputs.architecture }}" == "linux/amd64" ]; then
            ARCH_SUFFIX="x86_64"
            echo "architecture=${ARCH_SUFFIX}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.architecture }}" == "linux/ppc64le" ]; then
            ARCH_SUFFIX="ppc64le"
            echo "architecture=${ARCH_SUFFIX}" >> $GITHUB_OUTPUT
            # enable cross-architecture builds 
            docker run --privileged --rm tonistiigi/binfmt --install all
          fi
      
      - name: Build RPM
        id: build_rpm
        run: |
          echo "Starting make rpm"
          make rpm CENTOS_VER=${{ steps.centos_ver.outputs.centos_ver }} CONTAINER_PLATFORM=${{ inputs.architecture }}
          echo "Make rpm completed"

      - name: Finalize RPM
        id: finalize_full_rpm_path
        run: |
          DATE=$(date +'%Y%m%d')
          VERSION=$(jq -r '.version' < ./package.json)
          CENTOS_VER=${{ steps.centos_ver.outputs.centos_ver }}
          ARCH=${{ steps.architecture.outputs.architecture }}
          RPM_SUFFIX=el${CENTOS_VER}.${ARCH}.rpm
          RPM_BASE_VERSION=noobaa-core-${VERSION}-${DATE}
          RPM_FULL_PATH=${RPM_BASE_VERSION}-${{ inputs.branch }}${{ steps.suffix.outputs.suffix }}.${RPM_SUFFIX}
          echo "rpm_full_path=${RPM_FULL_PATH}"
          cp ./build/rpm/${RPM_BASE_VERSION}.${RPM_SUFFIX} ${RPM_FULL_PATH}
          echo "rpm_full_path=${RPM_FULL_PATH}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.finalize_full_rpm_path.outputs.rpm_full_path }}
          path: ${{ steps.finalize_full_rpm_path.outputs.rpm_full_path }}
